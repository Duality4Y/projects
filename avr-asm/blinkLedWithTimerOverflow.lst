gavrasm Gerd's AVR assembler version 3.3 (C)2012 by DG4FAC
----------------------------------------------------------
Source file: blinkLedWithTimerOverflow.asm
Hex file:    blinkLedWithTimerOverflow.hex
Eeprom file: blinkLedWithTimerOverflow.eep
Compiled:    20.05.2014, 11:08:05
Pass:        2
     1: ;source by: Duality / Robert
     2: ;Edited 13 - 5 - 2014
     3: ;	start working on implementing intterupts in assembly.
     4: ;	will make a walking light with interrupts timmers and leds.
     5: ;	note a rjmp(relative jump) can't jump as far as a jmp (jump)
     6: ;	but is faster, where jmp is slower.
     7: ;	rjmp can only jump 2047 up or down.
     8: ;	implementing timer interrupt and making it toggle a led.
     9: ;	timer works! going to main2.asm
    10: ;Edited 17 - 5 - 2014
    11: ;	timer interupt now correctly works.
    12: ;   my pin toggeling function wasen't right,
    13: ;	had to use in instead of ldi
    14: ;	
    15: ;	how to calculate
    16: ;	fcpu = 8000000
    17: ;	scale = 256
    18: ;	maxCValue = 2^16 (65536)-1
    19: ;	thus fcpu/scale/maxCValue = 0.47hz
    20: ;	to get 1hz we preload the timer on interupt with a value of
    21: ;	(2^16)/2 tcnt1 = 32768
    22: ;	and now the timer will tick once every second.
    23: 
    24: ;.nolist
    25: .include "m16def.inc"
 -> Warning 009: Include defs not necessary, using internal values!
   File: blinkLedWithTimerOverflow.asm, Line: 25
   Source line: .include "m16def.inc"
    26: ;.list
    27: ;.def's are symbolic names for registers.
    28: ;.equ's are symbolic names for constant value's.
    29: 
    30: .def temp = r16
    31: .def eorRegister = r17
    32: 
    33: ;data segment
    34: .dseg
    35: 	;everything here is in ram. like lists and such.
    36: 	val_count: .BYTE 1
    37: 
    38: ;code segment
    39: .cseg
    40: 	.org 0x00
    41: 000000   C011  rjmp start
    42: 	;interrupts have to be handled in line of priority.
    43: 	;for interrupt handeling timer routine
    44: 	.org OVF1addr-1
    45: 00000F   9518  reti
    46: 	.org OVF1addr
    47: 000010   940E  call timerInterruptRoutine
        000011   0037
    48: 	start:
    49: 000012   94F8  cli
    50: 	;initialize registers to zero if needed
    51: 000013   EF1F  ldi eorRegister, 0xFF
    52: 	;initialize status registers if needed
    53: 	;initialize pins
    54: 	
    55: 	;initialize the stack
    56: 000014   E50F  ldi temp, low(RAMEND)
    57: 000015   BF0D  out SPL, temp
    58: 000016   E004  ldi temp, high(RAMEND)
    59: 000017   BF0E  out SPH, temp
    60: 	
    61: 	;setup timer
    62: 000018   940E  call timerSetup
        000019   0030
    63: 	;setup led use
    64: 00001A   940E  call setupDebugLed
        00001B   0021
    65: 	;setup button use
    66: 	;call buttonSetup
    67: 	;jump to main routine.
    68: 00001C   9478  sei
    69: 00001D   C000  rjmp main
    70: 
    71: main:
    72: 00001E   0000  nop
    73: 	;call toggleLed
    74: 00001F   940C  jmp main
        000020   001E
    75: 
    76: setupDebugLed:
    77: 000021   EF0F  ldi temp, 0xFF
    78: 000022   BB0A  out DDRA, temp
    79: 000023   9508  ret
    80: 	
    81: toggleLed:
    82: 000024   B30B  in temp, PORTA
    83: 000025   2710  eor eorRegister, temp
    84: 000026   BB1B  out PORTA, eorRegister
    85: 000027   9508  ret
    86: 
    87: ;routing for setting up the button.
    88: buttonSetup:
    89: 	;use INT0
    90: 000028   E400  ldi temp, (1<<INT0);enable INT0
    91: 000029   BF0B  out GICR, temp
    92: 00002A   E002  ldi temp, (1<<ISC01) ;trigger on falling edge
    93: 00002B   BF05  out MCUCR, temp
    94: 00002C   9508  ret
    95: ;button interrupt service routine.
    96: buttonInterruptRoutine:
    97: 	;toggle led for debugging
    98: 00002D   940E  call toggleLed
        00002E   0024
    99: 00002F   9518  reti
   100: 
   101: ;routine for setting up timer use
   102: ;using timer 1
   103: timerSetup:
   104: 000030   94F8  cli
   105: 	;interupt on compare value.
   106: 000031   E004  ldi temp, (1<<CS12)
   107: 000032   BD0E  out TCCR1B, temp
   108: 000033   E004  ldi temp, (1<<TOIE1)
   109: 000034   BF09  out TIMSK, temp
   110: 000035   9478  sei
   111: 000036   9508  ret
   112: 	
   113: ;timer interrupt service routine
   114: timerInterruptRoutine:
   115: 000037   930F  push temp
   116: 	;toggle led for debugging
   117: 000038   940E  call toggleLed
        000039   0024
   118: 00003A   E800  ldi temp, high(32768)
   119: 00003B   BD0D  out TCNT1H, temp
   120: 00003C   E000  ldi temp, low(32768)
   121: 00003D   BD0C  out TCNT1L, temp
   122: 00003E   910F  pop temp
   123: 00003F   9518  reti
 -> Warning 001: 3 symbol(s) defined, but not used!

Program             :       50 words.
Constants           :        0 words.
Total program memory:       50 words.
Eeprom space        :        0 bytes.
Data segment        :        1 bytes.
Compilation completed, no errors.
Compilation endet 20.05.2014, 11:08:05
