gavrasm Gerd's AVR assembler version 3.3 (C)2012 by DG4FAC
----------------------------------------------------------
Source file: blinkLedWithTimerCompare.asm
Hex file:    blinkLedWithTimerCompare.hex
Eeprom file: blinkLedWithTimerCompare.eep
Compiled:    20.05.2014, 11:08:12
Pass:        2
     1: ;source by: Duality / Robert
     2: ;Edited 13 - 5 - 2014
     3: ;	start working on implementing intterupts in assembly.
     4: ;	will make a walking light with interrupts timmers and leds.
     5: ;	note a rjmp(relative jump) can't jump as far as a jmp (jump)
     6: ;	but is faster, where jmp is slower.
     7: ;	rjmp can only jump 2047 up or down.
     8: ;	implementing timer interrupt and making it toggle a led.
     9: ;	timer works! going to main2.asm
    10: ;Edited 17 - 5 - 2014
    11: ;	timer interupt now correctly works.
    12: ;   my pin toggeling function wasen't right,
    13: ;	had to use in instead of ldi
    14: ;	
    15: ;	how to calculate
    16: ;	fcpu = 8000000
    17: ;	scale = 256
    18: ;	maxCValue = 2^16 (65536)-1
    19: ;	thus fcpu/scale/maxCValue = 0.47hz
    20: ;	to get 1hz we preload the timer on interupt with a value of
    21: ;	(2^16)/2 tcnt1 = 32768
    22: ;	and now the timer will tick once every second.
    23: 
    24: ;	and instead of preloading we compare on the value 32768. 
    25: ;	and reset the count by loading 0 into tcnt1
    26: 
    27: .nolist
    30: ;.def's are symbolic names for registers.
    31: ;.equ's are symbolic names for constant value's.
    32: 
    33: .def temp = r16
    34: .def eorRegister = r17
    35: 
    36: ;data segment
    37: .dseg
    38: 	;everything here is in ram. like lists and such.
    39: 	val_count: .BYTE 1
    40: 
    41: ;code segment
    42: .cseg
    43: 	.org 0x00
    44: 000000   C00F  rjmp start
    45: 	;interrupts have to be handled in line of priority.
    46: 	;for interrupt handeling timer routine
    47: 	.org OC1Aaddr
    48: 00000C   940E  call timerInterruptRoutine
        00000D   0039
    49: 	.org OVF1addr
    50: 		;call timerInterruptRoutine
    51: 	start:
    52: 000010   94F8  cli
    53: 	;initialize registers to zero if needed
    54: 000011   EF1F  ldi eorRegister, 0xFF
    55: 	;initialize status registers if needed
    56: 	;initialize pins
    57: 	
    58: 	;initialize the stack
    59: 000012   E50F  ldi temp, low(RAMEND)
    60: 000013   BF0D  out SPL, temp
    61: 000014   E004  ldi temp, high(RAMEND)
    62: 000015   BF0E  out SPH, temp
    63: 	
    64: 	;setup timer
    65: 000016   940E  call timerSetup
        000017   002E
    66: 	;setup led use
    67: 000018   940E  call setupDebugLed
        000019   001F
    68: 	;setup button use
    69: 	;call buttonSetup
    70: 	;jump to main routine.
    71: 00001A   9478  sei
    72: 00001B   C000  rjmp main
    73: 
    74: main:
    75: 00001C   0000  nop
    76: 	;call toggleLed
    77: 00001D   940C  jmp main
        00001E   001C
    78: 
    79: setupDebugLed:
    80: 00001F   EF0F  ldi temp, 0xFF
    81: 000020   BB0A  out DDRA, temp
    82: 000021   9508  ret
    83: 	
    84: toggleLed:
    85: 000022   B30B  in temp, PORTA
    86: 000023   2710  eor eorRegister, temp
    87: 000024   BB1B  out PORTA, eorRegister
    88: 000025   9508  ret
    89: 
    90: ;routing for setting up the button.
    91: buttonSetup:
    92: 	;use INT0
    93: 000026   E400  ldi temp, (1<<INT0);enable INT0
    94: 000027   BF0B  out GICR, temp
    95: 000028   E002  ldi temp, (1<<ISC01) ;trigger on falling edge
    96: 000029   BF05  out MCUCR, temp
    97: 00002A   9508  ret
    98: 
    99: ;button interrupt service routine.
   100: buttonInterruptRoutine:
   101: 	;toggle led for debugging
   102: 00002B   940E  call toggleLed
        00002C   0022
   103: 00002D   9518  reti
   104: 
   105: ;routine for setting up timer use
   106: ;using timer 1
   107: timerSetup:
   108: 00002E   94F8  cli
   109: 	;interupt on compare value.
   110: 00002F   E004  ldi temp, (1<<CS12)
   111: 000030   BD0E  out TCCR1B, temp
   112: 000031   E100  ldi temp, (1<<OCIE1A)
   113: 000032   BF09  out TIMSK, temp
   114: 	;load compare register with a value so the timer ticks once a second.
   115: 000033   E800  ldi temp, high(32768)
   116: 000034   BD0B  out OCR1AH, temp
   117: 000035   E000  ldi temp, low(32768)
   118: 000036   BD0A  out OCR1AL, temp
   119: 000037   9478  sei
   120: 000038   9508  ret
   121: 	
   122: ;timer interrupt service routine
   123: timerInterruptRoutine:
   124: 000039   930F  push temp
   125: 	;toggle led for debugging
   126: 00003A   940E  call toggleLed
        00003B   0022
   127: 	;reset timer
   128: 00003C   E000  ldi temp, 0
   129: 00003D   BD0D  out TCNT1H, temp
   130: 00003E   BD0C  out TCNT1L, temp
   131: 00003F   910F  pop temp
   132: 000040   9518  reti
 -> Warning 001: 3 symbol(s) defined, but not used!

Program             :       52 words.
Constants           :        0 words.
Total program memory:       52 words.
Eeprom space        :        0 bytes.
Data segment        :        1 bytes.
Compilation completed, no errors.
Compilation endet 20.05.2014, 11:08:12
