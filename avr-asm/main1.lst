gavrasm Gerd's AVR assembler version 3.3 (C)2012 by DG4FAC
----------------------------------------------------------
Source file: main1.asm
Hex file:    main1.hex
Eeprom file: main1.eep
Compiled:    13.05.2014, 13:01:06
Pass:        2
     1: ;source by: Duality / Robert
     2: ;Edited 13 - 5 - 2014
     3: ;	start working on implementing intterupts in assembly.
     4: ;	will make a walking light with interrupts timmers and leds.
     5: ;	note a rjmp(relative jump) can't jump as far as a jmp (jump)
     6: ;	but is faster, where jmp is slower.
     7: ;	rjmp can only jump 2047 up or down.
     8: ;	implementing timer interrupt and making it toggle a led. 
     9: .include "m16def.inc"
 -> Warning 009: Include defs not necessary, using internal values!
   File: main1.asm, Line: 9
   Source line: .include "m16def.inc"
    10: 
    11: ;.def's are symbolic names for registers.
    12: ;.equ's are symbolic names for constant value's.
    13: 
    14: .def temp = r16
    15: 
    16: ;interrupts have to be handled in line of priority.
    17: ;for button interrupt routine
    18: .org INT0addr
    19: 000002   940E  call buttonInterruptRoutine
        000003   0015
    20: ;for interrupt handeling timer routine
    21: .org OC1Aaddr
    22: 00000C   940E  call timer1InterruptRoutine
        00000D   0021
    23: 
    24: ;data segment
    25: .dseg
    26: 	.org SRAM_START
    27: 	;everything here is in ram. like lists and such.
    28: 	val_count: .BYTE 1
    29: 
    30: ;code segment
    31: .cseg
    32: .org 0x00
    33: 	;initialize registers to zero if needed
    34: 	;initialize status registers if needed
    35: 000000   9478  sei ;enalbe interrupts
    36: 	;initialize pins
    37: 	
    38: 	;initialize the stack
    39: 000001   E50F  ldi r16, low(RAMEND)
    40: 000002   BF0D  out SPL, r16
    41: 000003   E004  ldi r16, high(RAMEND)
    42: 000004   BF0E  out SPH, r16
    43: 	
    44: 	;setup timer
    45: 000005   940E  call timerSetup
        000006   0017
    46: 	;setup led use
    47: 000007   940E  call setupDebugLed
        000008   000D
    48: 	;setup button use
    49: 000009   940E  call buttonSetup
        00000A   000F
    50: 	;jump to main routine.
    51: 00000B   C000  rjmp main
    52: 
    53: main:
    54: 00000C   CFFF  rjmp main
    55: 
    56: setupDebugLed:
    57: 00000D   9508  ret
    58: toggleLed:
    59: 00000E   9508  ret
    60: 
    61: ;routing for setting up the button.
    62: buttonSetup:
    63: 	;use INT0
    64: 00000F   E400  ldi temp, (1<<INT0);enable INT0
    65: 000010   BF0B  out GICR, temp
    66: 000011   E002  ldi temp, (1<<ISC01) ;trigger on falling edge
    67: 000012   BF05  out MCUCR, temp
    68: 000013   9478  sei
    69: 000014   9508  ret
    70: ;button interrupt service routine.
    71: buttonInterruptRoutine:
    72: 	;toggle led for debugging
    73: 000015   DFF8  rcall toggleLed
    74: 000016   9518  reti
    75: 
    76: ;routine for setting up timer use
    77: ;using timer 1
    78: timerSetup:
    79: 	;interupt on compare value.
    80: 000017   E00D  ldi temp, (1<<CS12)|(1<<CS10)|(1<<WGM12);prescaler of 1024 and ctc mode.
    81: 000018   BD0E  out TCCR1B, temp
    82: 000019   E100  ldi temp, (1<<OCIE1A)
    83: 00001A   BF09  out TIMSK, temp
    84: 	;compare on value of 781 for a pulse a second.
    85: 00001B   E00D  ldi temp, low(781)
    86: 00001C   BD0A  out OCR1AL, temp
    87: 00001D   E003  ldi temp, high(781)
    88: 00001E   BD0B  out OCR1AH, temp
    89: 00001F   9478  sei
    90: 000020   9508  ret
    91: 	
    92: ;timer interrupt service routine
    93: timer1InterruptRoutine:
    94: 	;toggle led for debugging
    95: 000021   DFEC  rcall toggleLed
    96: 	;load pointer to value
    97: 000022   E6E0  ldi ZL, low(val_count)
    98: 000023   E0F0  ldi ZH, high(val_count)
    99: 	;load count value into temp
   100: 000024   8100  ld temp, Z
   101: 000025   9503  inc temp ;increment temp;
   102: 000026   8300  st Z, temp;store value back in ram
   103: 000027   9518  reti

Program             :       44 words.
Constants           :        0 words.
Total program memory:       44 words.
Eeprom space        :        0 bytes.
Data segment        :        1 bytes.
Compilation completed, no errors.
Compilation endet 13.05.2014, 13:01:06
