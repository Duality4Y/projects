gavrasm Gerd's AVR assembler version 3.3 (C)2012 by DG4FAC
----------------------------------------------------------
Source file: main2.asm
Hex file:    main2.hex
Eeprom file: main2.eep
Compiled:    13.05.2014, 22:28:17
Pass:        2
     1: ;source by: Duality / Robert
     2: ;Edited 13 - 5 - 2014
     3: ;	start working on implementing intterupts in assembly.
     4: ;	will make a walking light with interrupts timmers and leds.
     5: ;	note a rjmp(relative jump) can't jump as far as a jmp (jump)
     6: ;	but is faster, where jmp is slower.
     7: ;	rjmp can only jump 2047 up or down.
     8: ;	implementing timer interrupt and making it toggle a led.
     9: ;	timer works! going to main2.asm
    10: .nolist
    13: ;.def's are symbolic names for registers.
    14: ;.equ's are symbolic names for constant value's.
    15: 
    16: .def temp = r16
    17: .def eorRegister = r17
    18: 
    19: ;data segment
    20: .dseg
    21: 	.org SRAM_START
    22: 	;everything here is in ram. like lists and such.
    23: 	val_count: .BYTE 1
    24: 
    25: ;code segment
    26: .cseg
    27: .org 0x00
    28: 000000   C011  rjmp start
    29: 	;interrupts have to be handled in line of priority.
    30: 	;for interrupt handeling timer routine
    31: 	.org OVF1addr
    32: 000010   940E  call timerInterruptRoutine
        000011   0036
    33: 	
    34: 	start:
    35: 	;initialize registers to zero if needed
    36: 000012   EF1F  ldi eorRegister, 0xFF
    37: 	;initialize status registers if needed
    38: 000013   9478  sei ;enalbe interrupts
    39: 	;initialize pins
    40: 	
    41: 	;initialize the stack
    42: 000014   E50F  ldi temp, low(RAMEND)
    43: 000015   BF0D  out SPL, temp
    44: 000016   E004  ldi temp, high(RAMEND)
    45: 000017   BF0E  out SPH, temp
    46: 	
    47: 	;setup timer
    48: 000018   940E  call timerSetup
        000019   0030
    49: 	;setup led use
    50: 00001A   940E  call setupDebugLed
        00001B   001E
    51: 	;setup button use
    52: 	;call buttonSetup
    53: 	;jump to main routine.
    54: 	;rjmp main
    55: 
    56: main:
    57: 00001C   0000  nop
    58: 	;call toggleLed
    59: 00001D   CFFE  rjmp main
    60: 
    61: setupDebugLed:
    62: 00001E   EF0F  ldi temp, 0xFF
    63: 00001F   BB0A  out DDRA, temp
    64: 000020   BB0B  out PORTA, temp
    65: 000021   9508  ret
    66: 	
    67: toggleLed:
    68: 000022   B30B  in temp, PORTA
    69: 000023   EF1F  ldi eorRegister, 0xFF
    70: 000024   2701  eor temp, eorRegister
    71: 000025   BB0B  out PORTA, temp
    72: 000026   9508  ret
    73: 
    74: ;routing for setting up the button.
    75: buttonSetup:
    76: 	;use INT0
    77: 000027   E400  ldi temp, (1<<INT0);enable INT0
    78: 000028   BF0B  out GICR, temp
    79: 000029   E002  ldi temp, (1<<ISC01) ;trigger on falling edge
    80: 00002A   BF05  out MCUCR, temp
    81: 00002B   9478  sei
    82: 00002C   9508  ret
    83: ;button interrupt service routine.
    84: buttonInterruptRoutine:
    85: 	;toggle led for debugging
    86: 00002D   940E  call toggleLed
        00002E   0022
    87: 00002F   9518  reti
    88: 
    89: ;routine for setting up timer use
    90: ;using timer 1
    91: timerSetup:
    92: 	;interupt on compare value.
    93: 000030   E001  ldi temp, (1<<CS10);
    94: 000031   BD0E  out TCCR1B, temp
    95: 000032   E004  ldi temp, (1<<TOIE1)
    96: 000033   BF09  out TIMSK, temp
    97: 000034   9478  sei
    98: 000035   9508  ret
    99: 	
   100: ;timer interrupt service routine
   101: timerInterruptRoutine:
   102: 000036   94F8  cli
   103: 000037   931F  push eorRegister
   104: 000038   930F  push temp
   105: 000039   B70F  in temp, sreg
   106: 00003A   930F  push temp
   107: 	
   108: 00003B   B30B  in temp, PORTA
   109: 00003C   EF1F  ldi eorRegister, 0xFF
   110: 00003D   2701  eor temp, eorRegister
   111: 00003E   BB0B  out PORTA, temp
   112: 	;toggle led for debugging
   113: 	;call toggleLed
   114: 	;load pointer to value
   115: 	;ldi ZL, low(val_count)
   116: 	;ldi ZH, high(val_count)
   117: 	;load count value into temp
   118: 	;ld temp, Z
   119: 	;inc temp ;increment temp;
   120: 	;st Z, temp;store value back in ram
   121: 	;reset the timer
   122: 	;ldi temp, 0x00
   123: 	;out TCNT1H, temp
   124: 	;ldi temp, 0x00
   125: 	;out TCNT1L, temp
   126: 00003F   910F  pop temp
   127: 000040   BF0F  out sreg,r16
   128: 000041   910F  pop temp 
   129: 000042   911F  pop eorRegister
   130: 000043   9478  sei
   131: 000044   9518  reti
 -> Warning 001: 3 symbol(s) defined, but not used!

Program             :       54 words.
Constants           :        0 words.
Total program memory:       54 words.
Eeprom space        :        0 bytes.
Data segment        :        1 bytes.
Compilation completed, no errors.
Compilation endet 13.05.2014, 22:28:17
