<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="64" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.0" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-US; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.date_last_changed">Tue May 27 10:23:34 2014
</m>
<m key="abiword.generator">AbiWord</m>
<m key="dc.date">2014-05-24T02:44:42</m>
<m key="dc.format">application/x-abiword</m>
<m key="meta:editing-cycles">3</m>
<m key="meta:editing-duration">PT25M19S</m>
</metadata>
<rdf>
<t  s="styles.xml"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/odf#StylesFile</t>
<t  s="content.xml"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/odf#ContentFile</t>
<t  s="manifest.rdf"  p="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#hasPart"  objecttype="1"  xsdtype=""  >styles.xml</t>
<t  s="manifest.rdf"  p="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#hasPart"  objecttype="1"  xsdtype=""  >content.xml</t>
<t  s="manifest.rdf"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/pkg#Document</t>
</rdf>
<history version="8" edit-time="1500" last-saved="1401179014" uid="f1589fd6-e574-11e3-8be5-b04000951af8">
<version id="8" started="1401177692" uid="31e7521a-e578-11e3-8be5-b04000951af8" auto="0" top-xid="8"/>
</history>
<styles>
<s type="P" name="Normal" props="lang:en-US; default-tab-interval:0.4925in; font-size:12pt; font-family:Times New Roman; dom-dir:ltr"/>
<s type="P" name="Caption" basedon="Normal" followedby="Caption" props="margin-top:0.0835in; font-size:12pt; margin-bottom:0.0835in; font-style:italic"/>
<s type="P" name="Heading" basedon="Normal" followedby="Text body" props="margin-top:0.1665in; keep-with-next:yes; margin-bottom:0.0835in; font-family:Arial; font-size:14pt"/>
<s type="C" name="Internet link_text" followedby="Internet link_text" props="lang:zxx-none; text-decoration:underline; color:#000080"/>
<s type="P" name="Text body" basedon="Normal" followedby="Text body" props="margin-bottom:0.0835in; margin-top:0in"/>
</styles>
<pagesize pagetype="Letter" orientation="portrait" width="8.500000" height="11.000000" units="in" page-scale="1.000000"/>
<section xid="24" props="page-margin-right:0.7874in; page-width:8.5in; page-margin-left:0.7874in; page-orientation:portrait; page-margin-bottom:0.7874in; page-margin-top:0.7874in; page-height:11in">
<p style="Normal" xid="25">Research:</p>
<p style="Normal" xid="1">loading a program on a pi can be done in different ways.</p>
<p style="Normal" xid="3">one way is to load it through a operating system.</p>
<p style="Normal" xid="4">another is by loading it of off your SD card.</p>
<p style="Normal" xid="12"><c></c></p>
<p style="Normal" xid="5">and another is loading it through a serial boot-loader.</p>
<p style="Normal" xid="6">which would make developing very easy.</p>
<p style="Normal" xid="7">a source on this is reference [4]</p>
<p style="Normal" xid="2"><c></c></p>
<p style="Normal" xid="10">this boot-loader enables communication for debugging while running your program.</p>
<p style="Normal" xid="11"><c></c></p>
<p style="Normal" xid="26">loading assembly through a Operating System is in some ways easier to accomplish the task at hand.</p>
<p style="Normal" xid="27">Loading your code through a operating system in my case linux is fairly easy.</p>
<p style="Normal" xid="28">You have a compiler.</p>
<p style="Normal" xid="29">In this case gcc. And that would assemble your code. And then you can simply execute the code through the ./ command.</p>
<p style="Normal" xid="30"><c></c></p>
<p style="Normal" xid="31">Cross compiling isn't really any harder. Besides the fact that your code gets compiled on a different cpu for a different cpu. Which meens you'll need a tool who can cross compile.</p>
<p style="Normal" xid="32">Also in this case GCC can do this for you.</p>
<p style="Normal" xid="33"><c></c></p>
<p style="Normal" xid="34">Though there is a possibility of loading code through a bootloader.</p>
<p style="Normal" xid="35">Which means there will be no Operating System running.</p>
<p style="Normal" xid="36">When the pi starts. There is no cpu running.</p>
<p style="Normal" xid="37">The Gpu only runs. Which reads from a fat32 partition a .img file through a bootloader binary which are called:</p>
<p style="Normal" xid="38">bootcode.bin</p>
<p style="Normal" xid="39">start.elf</p>
<p style="Normal" xid="40">this bootloader will fire up the arm chip,</p>
<p style="Normal" xid="41">so you can run your code from here on.</p>
<p style="Normal" xid="42"><c></c></p>
<p style="Normal" xid="43">Actually reference [1] is such a good place to start. That I recommend reading it.</p>
<p style="Normal" xid="44">It explains how the pi's hardware works.</p>
<p style="Normal" xid="45">How the boot process works.</p>
<p style="Normal" xid="46">How you write assembly code for the pi.</p>
<p style="Normal" xid="47">And how you would assemble that!</p>
<p style="Normal" xid="48"><c></c></p>
<p style="Normal" xid="62">reference[5] is the peripheral document for the pi.</p>
<p style="Normal" xid="63">and will be very useful for figuring out </p>
<p style="Normal" xid="49"><c></c></p>
<p style="Normal" xid="50">reference:</p>
<p style="Normal" xid="51">[1] <a xlink:href="http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/introduction.html" xid="52">http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/introduction.html</a></p>
<p style="Normal" xid="54">[2] <a xlink:href="https://github.com/dwelch67/raspberrypi" xid="55">https://github.com/dwelch67/raspberrypi</a></p>
<p style="Normal" xid="57">[3] <a xlink:href="http://www.raspberrypi.org/forums/viewtopic.php?f=24&amp;t=10814" xid="58">http://www.raspberrypi.org/forums/viewtopic.php?f=24&amp;t=10814</a></p>
<p style="Normal" xid="8" props="text-align:left; dom-dir:ltr">[4] https://github.com/mrvn/raspbootin</p>
<p style="Normal" xid="61" props="text-align:left; dom-dir:ltr">[5] http://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/downloads/SoC-Peripherals.pdf<pbr/></p>
<p style="Normal" xid="17">Hoofd vraag:</p>
<p style="Normal" xid="20"><c></c>hoe programeer je asm op de pi.</p>
<p style="Normal" xid="15"><c></c></p>
<p style="Normal" xid="21">Deel vragen:</p>
<p style="Normal" xid="60"><c></c></p>
<p style="Normal" xid="16">welke instructie set gebruikt de pi.</p>
<p style="Normal" xid="18"><c></c></p>
<p style="Normal" xid="19">wat is de processor model van de pi.</p>
<p style="Normal" xid="22"></p>
<p style="Normal" xid="23">wat zijn de verschillende manieren om de pi te programeren.</p>
</section>
</abiword>
